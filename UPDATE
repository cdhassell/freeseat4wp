### UPGRADING FROM 1.3.1 to 1.4.0

There has been major changes between these versions, so for safety, in
case people may be accessing the site during the upgrade, we'll
install it in a separate directory, and then move the new version over
the old one.

1. If possible, tell your users and operators to stop using FreeSeat
   until further notice (for instance using the $take_down variable as
   recommended in the 1.3.0-1.3.1 upgrade instructions), or choose a
   time to do the update when as few people as possible are using it.

2. Unpack the 1.4.0 archive to a web-reachable area, separate from
   your earlier freeseat installation.

3. Copy the config.php file of your 1.3.1 install to your 1.4.0
   install, and open the one in your 1.4.0 directory in an editor and
   make the following changes:

   - Add the following line (anywhere between '<?php' and '?>', but
     not between a '/*' and a '*/'):

$plugins = array('adminprint', 'bookingmap', 'config', 'htmltickets', 'remail', 'seatedit', 'showedit');

   - update in the same file the $normal_area and $sec_area variables
     to point to your 1.4.0 install.

   - remove the language selection statement (include
     "languages/something something.php";)

   - If you set $take_down in your 1.3.1 configuration file, unset it
     in your 1.4.0 configuration file so that you can test it
     yourself.

4. Copy any image files (the files/ directory), style sheets, and
   other custom data over to your 1.4.0 install.

4. Open http://your freeseat 1.4.0 install/plugins/config/ in a web
   browser. It should ask you to login with your FreeSeat admin
   password. Do so, then go through the displayed steps in order. In
   particular you should do the first step to select language,
   features (such as credit card payment, which is disabled by
   default!) and check configuration options. It will generate a new
   config.php you will have to save over the previous one. Don't worry
   about the message that the cron job has never been run, as the
   cron-detection code is new in version 1.4.0. You may want to come
   back a day later to make sure cron has been run properly.

5. Your FreeSeat 1.4.0 should now be ready to use, but you may want to
   test your new installation by making bookings through your 1.4.0
   install (and then deleting them), both in admin mode and regular
   mode.

6. Update the $normal_area and $sec_area variables in your 1.4.0
   config.php file (either directly or through the configuration
   plugin) to point to your 1.3.1 install.

7. Move your 1.3.1 install out of the way (ideally, out of the
   web-accessible area, to make sure people can no longer access
   it). WARNING: if you still have people using freeseat between this
   step and the next one they will get 404 errors and step 8 is
   completed!

8. Move your 1.4.0 install to where your 1.3.1 was.

9. Tell people you warned of the update during step 1 that the new
   version is now available.


### UPGRADING FROM 1.3.0. to 1.3.1

During the ugprade the database will briefly be in an inconsistent
state so you must first disable booking. We will enable it when
upgrading is done.

1. This step is only necessary if anyone may be using the
   administration mode while you do the upgrade (for instance an
   operator at a physical booking office).

Open the file functions/session.php in a text editor. Locate the line
that contains the following:

 if ($take_down && !admin_mode()) {

(normally, line 124).

Replace it by:

 if ($take_down) {

Save the file.

2. Add the following line in your config.php file:

$take_down = 'Booking is currently down for maintenance. Please hold on and try again in ten minutes. We apologise for the inconvenience caused.';

Everybody connecting to freeseat will now get the above warning, so it
is safe to start altering the database (you may want to try connecting
to your site to make sure the setting was taken into account: The
"buy" button on the main page should not be available.)

The price amounts in the "price" table must be multiplied by one
hundred as they are now measured in cents (or pennies, or whatever one
hundredth of $currency is called for you). This is done as follows.

3. Open the mysql command line as a user able to modify database
   schemata

4. select your database (type "use" without quotes followed by
   whatever $dbdb is set to in config.php), and press enter.

5. Run the command "update price set price = price * 100;" without the
   quotes, and don't forget the final semi-colon.

6. Run the command "alter table price modify price int(10);" without
   the quotes, and don't forget the final semi-colon.

The numxkp column in ccard_transaction is now a varchar:

7. Still at the mysql command line, run the command "alter table ccard_transactions modify numxkp varchar(25);"

8. Close the mysql command line.

9. Copy all php files from the FreeSeat archive (including languages
   and functions) over your existing installation.

If none of the above caused any warnings you may now open booking again:

10. Remove the $take_down notice you inserted into config.php.

You may want to connect to your site and verify booking is again
available.

11. There are three new configuration items: $top_countries,
    $moneyfactor and $paypal["notif_source"] (see description in
    config-dist.php). The above procedure assumed $moneyfactor was
    100. If you need another value, repeat the above procedure (steps
    1-5) accordingly but replacing 100 by whatever you set
    $moneyfactor to, divided by 100 (since you already multiplied by
    100!).

12. Four configuration items have been deprecated so you may safely
    remove them from config.php (they are ignored in any case) :
    $paypal["site_url"] has been replaced by (the already existing)
    $normal_area. $org_name has been replaced by (the already
    existing) $websitename. $pref_country_name and $pref_state_name
    are now inferred from $pref_country_code and $pref_state_code
    using the mapping given in functions/countries.php and
    functions/us_states.php.

13. The encoding for the "notes" next to booking entries in
    bookinglist.php has changed so some special characters like < or &
    in notes added before the upgrade will now appear as &lt; and
    &amp;. If this is a problem to you, post a support request on
    sourceforge and I'll explain how to convert old entries to the new
    encoding.


### UPGRADING FROM 1.2.2 to 1.3.0

Please read the following BEFORE overriding the distribution.

1. There's now a seatmap editor. If you want to use it, run the
   following MySQL statement to grant the corresponding rights to the
   administrator (replacing "ticketing" by whatever $dbdb is set to in
   your config.php, and "bookingadmin" by whatever $adminuser is set
   to):

GRANT INSERT on ticketing.theatres TO bookingadmin@localhost;
GRANT INSERT,DELETE on ticketing.seats TO bookingadmin@localhost;

2. The seatmap editor doesn't support negative coordinates, like the
   seats.php does. If you have seatmaps with negative coordinates (the
   demo "theatrevevey" put one seat with x coordinate -1) AND plan
   to edit those seatmaps, increment the coordinates to make them all
   non-negative (a warning message pops up if you try to load a map
   with unsupported seats). Incrementing seat coordinates should be
   safe on a live site.

3. The default css location has been renamed to general.css and moved
   into a "style" directory. If you have changed the $stylesheet
   configuration variable and/or modified the stylesheet itself,
   please take that into account. If the site is live I recommend to
   proceed as follows: First create a "style" directory, then copy the
   general.css file into it. Merge into it any changes you had done
   earlier on the default style.css. Then only modify $stylesheet in
   config.php to point to style/general.css. BEWARE if you're using
   relative paths like background images.

4. Seat colours are now set with CSS, so if you customised those in
   format.php, please re-apply your changes to general.css.

After taking the above into account it should now be safe to copy
files from the archive ( *.php style icons functions languages ) over
your freeseat installation.

### UPGRADING FROM 1.2.2 or 1.2.2a to 1.2.2b or 1.2.2c

It should be safe to unpack the new archive in place.

1. There are three new language items: "err_noavailspec", "hideold"
   and "showallspec". You may want to update your language file to
   reflect this (otherwise those strings will show up in English as
   they already did in version 1.2.2 anyway)

### UPGRADING FROM 1.2.1 to 1.2.2

It is normally safe to unpack the new archive in place but please read
this upgrading guide anyway, especially if you have a customised
version of FreeSeat.

1. The maximal number of bookings displayed by bookinglist.php can now
   be configured by setting $bookings_on_a_page in config.php.

2. There is one new language item: $lang["none"].

3. Things to note if you have custom code: You must do require_once
   "vars.php" instead of require_once "config.php". The get_bookings()
   interface has changed.

### UPGRADING FROM 1.2.0 to 1.2.1

Some rights were missing for the bookingadmin user. Please run the
following commands on the mysql prompt (replacing "ticketing" by
whatever $dbdb is set to in your config.php, and "bookingadmin" by
whatever $adminuser is set to):

GRANT DELETE ON ticketing.price TO bookingadmin@localhost;
GRANT DELETE ON ticketing.class_comment TO bookingadmin@localhost;

### UPGRADING FROM 1.1.5d to 1.2.0

Note: Although it would probably be safe, I don't recommend doing this
on a live site.

1. Table structure has changed. Run the following commands against
your database:

alter table booking add postalcode varchar(15) default NULL,
  add city varchar(127) default NULL,
  add us_state varchar(2) default NULL,
  addcountry varchar(2) default NULL;

CREATE TABLE class_comment (
	spectacle int (7) not null,
	class int(2) not null,
	comment varchar(64),
	primary key(spectacle,class)
);

GRANT SELECT ON class_comment TO bookinguser@localhost;
GRANT SELECT ON class_comment TO bookingadmin@localhost;
GRANT INSERT,UPDATE ON ticketing.class_comment TO bookingadmin@localhost;

2. Optional: populate the new class_comment table with human readable
descriptions of seat categories.

3. There is a new "system" user, used by cron.php and
klikconfirm.php. Create is using the following commands:

GRANT USAGE ON *.* TO bookingsystem@localhost IDENTIFIED BY 'REPLACE_THIS_BY_THE_BOOKINGSYSTEM_PASSWORD_YOU_WANT';
GRANT SELECT,DELETE ON ticketing.seat_locks TO bookingsystem@localhost;
GRANT SELECT ON ticketing.config TO bookingsystem@localhost;
GRANT SELECT, UPDATE ON ticketing.booking TO bookingsystem@localhost;
GRANT SELECT ON ticketing.shows TO bookingsystem@localhost;
GRANT SELECT ON ticketing.seats TO bookingsystem@localhost;
GRANT SELECT ON ticketing.theatres TO bookingsystem@localhost;
GRANT SELECT, INSERT ON ticketing.ccard_transactions TO bookingsystem@localhost;
GRANT SELECT ON ticketing.price TO bookingsystem@localhost;
GRANT SELECT ON ticketing.class_comment TO bookingsystem@localhost;
GRANT SELECT ON ticketing.spectacles TO bookingsystem@localhost;

4. Configuration file has been reorganised and has new entries. The
safest is to prepare a new version of config-dist.php, importing
values from your config.php. (Copy config-dist.php as
config-new.php, edit config-new.php, then rename config-new.php as
config.php, erasing the existing configuration)

5. Freeseat no longer runs if there's a file called "tables.sql" in
the main directory. Move it out of the way if necessary, before
proceeding.

6. Unpack/copy this archive over the existing files.

7. The spectacleid column in the config table is no longer used, and
access to the ccard_transaction table is no longer used by bookingadmin.
You may remove them running the following command (!! If for some
(probably bad) reason bookingadmin and bookingsystem are the same,
then obviously don't run the REVOKE command !!)

alter table config drop column spectacleid;

REVOKE SELECT, INSERT ON ticketing.ccard_transactions from bookingadmin@localhost;


### UPGRADING FROM 1.1.5c to 1.1.5d

1. Run the following command against your database:

alter table seat_locks add sid varchar(50) NOT NULL default '0';

2. Move the new .php files over (i.e. uncompress this archive
somewhere on the same partition as the freeseat root, then move the
php files - that way you're sure no one runs a php file that is still
being copied/uncompressed)

(config.php does not need updating. It is safe to run this on a live site)